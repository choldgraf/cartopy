

.. _sphx_glr_gallery_lines_and_polygons_always_circular_stereo.py:


Always Circular Stereo
----------------------





.. image:: /gallery/lines_and_polygons/images/sphx_glr_always_circular_stereo_001.png
    :align: center





.. code-block:: python

    import matplotlib.path as mpath
    import matplotlib.pyplot as plt
    import numpy as np

    import cartopy.crs as ccrs
    import cartopy.feature


    def main():
        fig = plt.figure(figsize=[10, 5])
        ax1 = fig.add_subplot(1, 2, 1, projection=ccrs.SouthPolarStereo())
        ax2 = fig.add_subplot(1, 2, 2, projection=ccrs.SouthPolarStereo(),
                              sharex=ax1, sharey=ax1)
        fig.subplots_adjust(bottom=0.05, top=0.95,
                            left=0.04, right=0.95, wspace=0.02)

        # Limit the map to -60 degrees latitude and below.
        ax1.set_extent([-180, 180, -90, -60], ccrs.PlateCarree())

        ax1.add_feature(cartopy.feature.LAND)
        ax1.add_feature(cartopy.feature.OCEAN)

        ax1.gridlines()
        ax2.gridlines()

        ax2.add_feature(cartopy.feature.LAND)
        ax2.add_feature(cartopy.feature.OCEAN)

        # Compute a circle in axes coordinates, which we can use as a boundary
        # for the map. We can pan/zoom as much as we like - the boundary will be
        # permanently circular.
        theta = np.linspace(0, 2*np.pi, 100)
        center, radius = [0.5, 0.5], 0.5
        verts = np.vstack([np.sin(theta), np.cos(theta)]).T
        circle = mpath.Path(verts * radius + center)

        ax2.set_boundary(circle, transform=ax2.transAxes)

        plt.show()


    if __name__ == '__main__':
        main()

**Total running time of the script:** ( 0 minutes  0.248 seconds)



.. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: always_circular_stereo.py <always_circular_stereo.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: always_circular_stereo.ipynb <always_circular_stereo.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
